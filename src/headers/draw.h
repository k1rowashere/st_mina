#pragma once
#include "constants.h"
#include "utils.h"
#include <Adafruit_GFX.h>  // Core graphics library
#include <MCUFRIEND_kbv.h> // Hardware-specific library

enum Side
{
    LHS = 0,
    RHS = SCREEN_WIDTH / 2
};

namespace Draw
{
void init(const Status (&current_status)[2], bool pos_unlock);
void status(const Status (&status)[2]);
void volume_indicator(const uint16_t act_set_pos[2], const uint16_t vis_set_pos[2]);
void error(const char* error, Side side = LHS);
void clear_error(Side side = LHS);

void btn_ack();
void btn_plus_minus(uint16_t color = TFT_WHITE);
void btn_lock(uint16_t color = TFT_WHITE);
void btn_apply_cancel();
void btn_applied();
void btn_clear();

void btn_empty_cylinder();
void btn_fill_cylinder();
} // namespace Draw

// 'lock, 24x30px
constexpr uint8_t lock_bmp[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x01, 0xff, 0x80, 0x03, 0xff, 0xc0, 0x07, 0xc3, 0xe0, 0x0f,
    0x81, 0xf0, 0x0f, 0x00, 0xf0, 0x0f, 0x00, 0xf0, 0x0e, 0x00, 0x70, 0x0e, 0x00, 0x70, 0x0e, 0x00,
    0x70, 0x3f, 0xff, 0xfc, 0x7f, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xc3, 0xff, 0xff,
    0xe7, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xfe};

// 'open_lock, 24x30px
constexpr uint8_t open_lock_bmp[] PROGMEM = {
    0x00, 0xff, 0x00, 0x01, 0xff, 0x80, 0x03, 0xff, 0xc0, 0x07, 0xc3, 0xe0, 0x0f, 0x81, 0xf0, 0x0f,
    0x00, 0xf0, 0x0f, 0x00, 0xf0, 0x0e, 0x00, 0x30, 0x0e, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0e, 0x00,
    0x00, 0x3f, 0xff, 0xfc, 0x7f, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xc3, 0xff, 0xff,
    0xe7, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xfe};